/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1.bingo;

import java.awt.BorderLayout;
import java.awt.Image;
import java.io.File;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import proyecto1.logicadenegocios.Juego;
import proyecto1.logicadenegocios.Jugador;

/**
 * La clase verCarton proporciona una interfaz gráfica para visualizar cartones de bingo.
 * La interfaz permite a los usuarios seleccionar un cartón por su código y visualizarlo.
 * Además, muestra a qué jugador pertenece el cartón seleccionado.
 * 
 * @author Daniel Arce, Andrea Alemán y Joustin Montenegro
 * @version 16/10/2023
 */
public class verCarton extends javax.swing.JFrame {

    /**
     * Constructor por defecto que inicializa los componentes de la interfaz.
     */
    public verCarton() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        jButton3 = new javax.swing.JButton();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Ver cartones");

        jLabel2.setText("Digite el codigo del cartón que desea ver:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Ver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Pertene a:");

        jLabel5.setText(" ");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 162, Short.MAX_VALUE)
        );

        jButton3.setText("Cargar códigos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(329, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(81, 81, 81))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(152, 152, 152)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5)))
                            .addGap(139, 139, 139)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton3)
                .addContainerGap(255, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(16, 16, 16)
                    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton1))
                    .addGap(1, 1, 1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método que se ejecuta al hacer clic en el botón "Regresar".
     * Cierra la ventana actual y regresa a la ventana anterior.
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        enviarCartones volver = new enviarCartones();
        volver.setVisible(true);
        this.setVisible(false);             
    }//GEN-LAST:event_jButton2ActionPerformed
    public static Juego juego;
    /**
     * Método para cargar los IDs de los cartones en el JComboBox.
     * Accede a la carpeta de cartones, lista sus archivos y filtra aquellos con extensión .jpg.
     * Luego, extrae el nombre del archivo (sin la extensión) y lo agrega al JComboBox.
     * @param juegoEnCurso
     * @return 
     */
    public Juego cargarDatos(Juego juegoEnCurso){
        juego=juegoEnCurso;
        return juegoEnCurso;
    }
    
    
    
    
    
    /**
     * Método que se ejecuta al hacer clic en el botón "Ver".
     * Obtiene el ID seleccionado del JComboBox, construye la ruta de la imagen correspondiente,
     * carga y muestra la imagen en el panel. Además, muestra el nombre del jugador dueño del cartón.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // 1. Obtener el ID seleccionado del JComboBox
        if (jComboBox1.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "No hay ningún ID seleccionado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String idSeleccionado = (String) jComboBox1.getSelectedItem();

        // 2. Construir la ruta completa de la imagen
        String rutaImagen = "C:/Users/Daniel/Documents/GitHub/PP1---POO/Proyecto1-Bingo/src/Cartones/" + idSeleccionado + ".jpg";
        File archivoImagen = new File(rutaImagen);
        if (!archivoImagen.exists()) {
            JOptionPane.showMessageDialog(this, "No hay ningún ID válido selccionado .", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 3. Cargar y mostrar la imagen en el Panel
        try {
            // Cargar la imagen desde la ruta especificada
            ImageIcon iconoImagen = new ImageIcon(rutaImagen);

            // Ajustar tamaño de la imagen al tamaño del panel
            Image imagen = iconoImagen.getImage().getScaledInstance(panel1.getWidth(), panel1.getHeight(), Image.SCALE_SMOOTH);

            // Crear un JLabel para mostrar la imagen
            JLabel labelImagen = new JLabel(new ImageIcon(imagen));

            // Limpiar el panel antes de agregar la nueva imagen
            panel1.removeAll();
            panel1.setLayout(new BorderLayout());

            // Agregar el JLabel con la imagen al Panel
            panel1.add(labelImagen, BorderLayout.CENTER);

            // Validar y repintar el panel para asegurarse de que la imagen se muestre correctamente
            panel1.validate();
            panel1.repaint();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar la imagen.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // 4. Mostrar el nombre del jugador dueño del cartón
        Jugador jugadorDueno = juego.encontrarJugadorPorIDCarton(idSeleccionado);
        if (jugadorDueno == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el jugador con el ID de cartón especificado.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String nombreJugador = jugadorDueno.getNombreCompleto();
        jLabel5.setText(nombreJugador);
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Método que se ejecuta al seleccionar un elemento del JComboBox.
     * Actualmente no tiene una implementación específica.
     */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
               // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    /**
     * Método que se ejecuta al hacer clic en el botón "Cargar códigos".
     * Llama al método cargarIDsEnComboBox para actualizar la lista de códigos en el JComboBox.
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        cargarIDsEnComboBox(); 
        
    }//GEN-LAST:event_jButton3ActionPerformed

    
    /**
     * Método para cargar los IDs de los cartones en el JComboBox.
     * Accede a la carpeta de cartones, lista sus archivos y filtra aquellos con extensión .jpg.
     * Luego, extrae el nombre del archivo (sin la extensión) y lo agrega al JComboBox.
     */
    private void cargarIDsEnComboBox() {
        // 1. Acceder a la carpeta y listar sus archivos
        File carpeta = new File("/Users/Daniel/Documents/GitHub/PP1---POO/Proyecto1-Bingo/src/Cartones/");
        File[] archivos = carpeta.listFiles((dir, name) -> name.toLowerCase().endsWith(".jpg"));

        // 2. y 3. Filtrar y extraer el nombre del archivo
        DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
        for (File archivo : archivos) {
            String nombre = archivo.getName();
            String id = nombre.substring(0, nombre.lastIndexOf('.')); // Eliminar la extensión .jpg
            modelo.addElement(id);
        }

        // 4. Agregar cada ID al JComboBox
        jComboBox1.setModel(modelo);
    }
    
    
    /**
     * Método principal para ejecutar la aplicación.
     * 
     * @param args Argumentos de línea de comando.
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(verCarton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(verCarton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(verCarton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(verCarton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                new verCarton().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
